---------------------------帧差法--------------------------

利用小白点相对背景移动速度快、面积小的特点，比较当前帧与附近的帧之间的灰度差来检测小白点

步骤：
1. 分别与前、后的帧做运算，取两次运算的交集，根据背景的移动最大速度和小白点的最小速度设定合理的帧跨度，使得计算小白点位置的同时，不受背景移动的干扰，得到mask
2. 利用亮度和面积删除mask中白色大面积物体
3. 补洞

优点：
1. 对高速移动的物体效果好，效率高
缺点：
1. 背景移动加快时，若背景上有细小纹理，容易被误检测
2. 有些小白点几乎不动，需要用其他检测算法弥补

待解决的问题：
1. 小鱼刚出来时面积小，被滤除
2. 细小颗粒
3. 背景移动时被检测到

--------------------考虑背景移动的帧差法----------------

利用小白点相对背景移动速度快、面积小的特点，比较当前帧与附近的帧之间的灰度差来检测小白点。考虑背景较为固定的特点，计算出背景的移动速度，减少误检测。

步骤：
1. 利用最大类间方差方法处理当前帧和相邻帧得到背景轮廓
2. 利用连通面积去除背景轮廓中的小白点。
3. 在位移范围内，找到两帧背景重合度最高的情况，根据此时的位移信息移动相邻帧
4. 计算当前帧和移动后的相邻帧的差值，二值化
5. 分别与前、后的帧做步骤1-4运算，取两次运算的交集，根据背景的移动最大速度和小白点的最小速度设定合理的帧跨度，使得计算小白点位置的同时，不受背景移动的干扰，得到mask
6. 利用亮度和面积删除mask中白色大面积物体
7. 补洞

优点：
1. 对高速移动的物体效果好，效率高
2. 对背景只存在整体小范围位移的视频效果好
缺点：
1. 背景移动加快时，若背景上有细小纹理，容易被误检测
2. 有些小白点几乎不动，需要用其他检测算法弥补

待解决的问题：
1. 小鱼刚出来时面积小，被滤除
2. 细小颗粒
3. 背景移动时被检测到

-------------------------光流法-------------------------------
步骤：

找到需要修复的点：
1. 利用稀疏光流追踪背景的角点（特征是一直慢速），计算出背景的位移
2. 假设当前处理第i帧图像，将第i+2帧根据背景位移移回原来的位置
3. 将两帧图像用稠密光流算出每个点的位移，距离超过背景位移的视为需要修复的点

修复：
1. 利用前后10帧中无需修复的点，根据背景的位移填补当前帧
3. 利用饱和度、明度和大小筛选出需要保护的物体（小鱼），将其复原
2. 剩余待修复的少量区域用补洞算法修复

优点：
1. 用前后帧修补图像使得图像连贯性好
2. 对移动的物体效果好，效率高
3. 对背景只存在整体小范围位移的视频效果好
缺点：
1. 有些小白点几乎不动，需要用其他检测算法弥补
2. 背景图像有变形、缩放时修补误差大

待解决的问题：
1. 移速缓慢的小白点如何去除


---------------------光流法+hsv过滤------------------------------
相较光流法加入了较为严格的hsv过滤，滤除较明显的白点

-----------------------MultiStride------------------------------
有地方一直误判为mask区域，修复不过来，原因是背景的缩放已经不能忽略
1. 提高阈值(不行)
2. 修复方法改善为用前后帧平均值修复(好些，指标不治本)
3. 加入缩放判断(由于角点数量少，在帧跨度小时，偶然误差不可忽略，因此在帧跨度大于10时加入缩放判断)

------------------------------------------------------------
其实用亮度和饱和度已经可以做到较准确的区分小白点了
所以接下来有两种思路
1. hsv宽松过滤后用连通器中心坐标为角点做稀疏光流 很依赖初始参数的设定
2. hsv宽松过滤后求稠密光流中的平均位移

形状有误判的几率

